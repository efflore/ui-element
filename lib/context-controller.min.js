const t="context-request",e=t=>"function"==typeof t;export class ContextRequestEvent extends Event{constructor(e,s,o=!1){super(t,{bubbles:!0,cancelable:!0,composed:!0}),this.context=e,this.callback=s,this.subscribe=o}}export class ContextProvider{#t=new Map;constructor(e){this.host=e,this.hostPrototype=Object.getPrototypeOf(e),this.host.addEventListener(t,this.#e.bind(this)),this.hostPrototype.providedContexts?.forEach((t=>{this.host.effect((()=>{const e=this.host.get(t);this.#t.has(t)&&this.#t.get(t).forEach(((s,o)=>s(e,(()=>this.#t.get(t).delete(o)))))}))}))}disconnect(){this.host.removeEventListener(t,this.#e),this.#t.clear()}#e(t){const{target:s,context:o,callback:n,subscribe:h}=t;if(!this.hostPrototype.providedContexts?.includes(o)||!e(n))return;t.stopPropagation();const c=this.host.get(o);if(h){!this.#t.has(o)&&this.#t.set(o,new Map);const t=this.#t.get(o);!t.has(s)&&t.set(s,n),n(c,(()=>this.#t.get(o).delete(s)))}else n(c)}}export class ContextConsumer{#s=new Map;constructor(t){this.host=t,this.hostPrototype=Object.getPrototypeOf(t),requestAnimationFrame((()=>{this.hostPrototype.observedContexts?.forEach((t=>{const s=new ContextRequestEvent(t,((s,o)=>{this.#s.set(t,o);const n=this.host.contextMap[t],[h,c]=Array.isArray(n)?n:[t,n];this.host.set(h,e(c)?c(s):s)}),!0);this.host.dispatchEvent(s)}))}))}disconnect(){this.#s.forEach((t=>e(t)&&t()))}}