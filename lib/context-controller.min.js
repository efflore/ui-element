import{effect as t}from"../index.js";const e="context-request",s=t=>"function"==typeof t;export class ContextRequestEvent extends Event{constructor(t,s,o=!1){super(e,{bubbles:!0,cancelable:!0,composed:!0}),this.context=t,this.callback=s,this.subscribe=o}}export class ContextProvider{#t=new Map;#e;#s;constructor(s){this.#e=s,this.#s=Object.getPrototypeOf(s),this.#e.addEventListener(e,this.#o.bind(this)),this.#s.providedContexts?.forEach((e=>{t((()=>{const t=this.#e.get(e);this.#t.has(e)&&this.#t.get(e).forEach(((s,o)=>s(t,(()=>this.#t.get(e).delete(o)))))}))}))}disconnect(){this.#e.removeEventListener(e,this.#o),this.#t.clear()}#o(t){const{target:e,context:o,callback:n,subscribe:h}=t;if(!this.#s.providedContexts?.includes(o)||!s(n))return;t.stopPropagation();const r=this.#e.get(o);if(h){!this.#t.has(o)&&this.#t.set(o,new Map);const t=this.#t.get(o);!t.has(e)&&t.set(e,n),n(r,(()=>this.#t.get(o).delete(e)))}else n(r)}}export class ContextConsumer{#n=new Map;#e;#s;constructor(t){this.#e=t,this.#s=Object.getPrototypeOf(t),requestAnimationFrame((()=>{this.#s.observedContexts?.forEach((t=>{const e=new ContextRequestEvent(t,((e,o)=>{this.#n.set(t,o);const n=this.#s.contextMap[t],[h,r]=Array.isArray(n)?n:[t,n];this.#e.set(h,s(r)?r(e):e)}),!0);this.#e.dispatchEvent(e)}))}))}disconnect(){this.#n.forEach((t=>s(t)&&t()))}}