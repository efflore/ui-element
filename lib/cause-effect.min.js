let t;const e=t=>"function"==typeof t,s=s=>{const c=()=>(t&&c.effects.add(t),s);return c.effects=new Set,c.set=t=>{const o=s;if(s=e(t)&&!e(s.set)?t(o):t,!Object.is(s,o))for(const t of c.effects)t()},c},c=t=>t,o=s=>{const c=()=>{const o=t;t=c;const f=s();t=o,e(f)&&f()};c()};export{s as cause,c as derive,o as effect};