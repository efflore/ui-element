let t;const e=t=>"function"==typeof t,s=t=>e(t)&&e(t.set),o=o=>{const c=()=>(t&&c.effects.add(t),o);return c.effects=new Set,c.set=t=>{const f=o;if(o=e(t)&&!s(t)?t(f):t,!Object.is(o,f))for(const t of c.effects)t()},c},c=t=>t,f=s=>{const o=new Map,c=()=>{const f=t;t=c;const n=s(((t,e)=>{!o.has(t)&&o.set(t,new Set),o.get(t).add(e)}));t=f,queueMicrotask((()=>{for(const t of o.values())for(const e of t)e();e(n)&&n()}))};c.targets=o,c()};export{o as cause,c as derive,f as effect,e as isFunction,s as isState};