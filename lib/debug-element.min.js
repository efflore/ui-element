import e from"../index.js";export default class extends e{debug=!1;attributeMap=new Map;attributeChangedCallback(e,t,r){this.log(`Attribute '${e}' of ${this.localName} changed from '${t}' to '${r}'`),super.attributeChangedCallback(e,t,r)}get(e){return this.log(`Call get('${String(e)}') in ${this.localName} and track its use in effect`),super.get(e)}set(e,t,r=!0){this.log(`Call set('${String(e)}', '${t}'${!r&&" , false"}) in ${this.localName} and trigger dependent effects`),super.set(e,t,r)}effect(e){return this.debug&&"function"!=typeof e&&this.error(new TypeError(`Effect handler in ${this.localName} is not a function`)),super.effect(e)}log(e){this.debug&&console.debug(e)}error(e){throw e}}