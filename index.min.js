const t=t=>e=>typeof e===t,e=t("object"),s=t("function"),n=t=>(t=>null!=t)(t)&&(e(t)||s(t)),o=Symbol("nothing"),r=t=>s(t)?r(t()):t,c=(t,e)=>t&&s(t[e]),i=t=>(t=>(t=>null==t)(t)||s(t)&&"type"in t&&t.type===o)(t)?h():a(t),a=t=>{const e=()=>t;return e.type=typeof t,e.toString=()=>n(t)?JSON.stringify(t):String(t),e.map=e=>i(e(t)),e.or=()=>a(t),e},h=()=>new Proxy((()=>{}),{get:(t,e)=>"type"===e?o:"toString"===e?()=>"":"or"===e?t=>i(t()):()=>h()});let l;const u=t=>s(t)&&c(t,"set"),f=t=>u(t)||(t=>s(t)&&c(t,"run")&&"effects"in t)(t),d=t=>{const e=()=>(l&&e.effects.add(l),t);return e.effects=new Set,e.set=o=>{const i=t;t=s(o)&&!f(o)?(t=>n(t)&&c(t,"map"))(t)?t.map(o):o(t):o,!Object.is(r(t),r(i))&&(t=>{for(const e of t)e.run()})(e.effects)},e},g=t=>{const e=new Map,n=()=>{const o=l;l=n;const r=t(((t,s)=>{!e.has(t)&&e.set(t,new Set),e.get(t)?.add(s)}));for(const t of e.values()){for(const e of t)e();t.clear()}l=o,s(r)&&queueMicrotask(r)};n.run=()=>n(),n.targets=e,n()},p="context-request";class b extends Event{context;callback;subscribe;constructor(t,e,s=!1){super(p,{bubbles:!0,composed:!0}),this.context=t,this.callback=e,this.subscribe=s}}class y extends HTMLElement{static registry=customElements;static attributeMap={};static consumedContexts;static providedContexts;static define(t){try{this.registry.get(t)||this.registry.define(t,this)}catch(t){console.error(t)}}#t=new Map;attributeChangedCallback(t,e,n){if(n===e)return;const o=this.constructor.attributeMap[t],r=i(n);this.set(t,s(o)?o(r,this,e):r)}connectedCallback(){const t=this.constructor,e=t.consumedContexts||[];for(const t of e)this.set(String(t),void 0);setTimeout((()=>{for(const t of e)this.dispatchEvent(new b(t,(e=>this.set(String(t),e))))}));const n=t.providedContexts||[];n.length&&this.addEventListener(p,(t=>{const{context:e,callback:o}=t;n.includes(e)&&s(o)&&(t.stopPropagation(),o(this.#t.get(String(e))))}))}has(t){return this.#t.has(t)}get(t){return r(this.#t.get(t))}set(t,e,s=!0){if(this.#t.has(t)){if(s){const s=this.#t.get(t);u(s)&&s.set(e)}}else this.#t.set(t,f(e)?e:d(e))}delete(t){return this.#t.delete(t)}async pass(t,e){if(await this.constructor.registry.whenDefined(t.localName),!c(t,"set"))throw new TypeError("Expected UIElement");for(const[n,o]of Object.entries(e))t.set(n,f(o)?o:s(o)?d(o):this.#t.get(o))}signal(t){return this.#t.get(t)}}export{y as default,g as effect};