const t="context-request",e=t=>"function"==typeof t,s=(t,...e)=>{const n=e.shift();return!t.has(n)&&t.set(n,new Map),e.length?s(t.get(n),...e):t.get(n)},n=t=>{const e=[];for(const[s,o]of t)o instanceof Map?e.push(s,...n(o)):e.push(s,o);return e};let o;const c=t=>{const s=()=>(o&&s.effects.add(o),t);return s.effects=new Set,s.set=n=>{const o=t;if(t=e(n)&&!e(t.set)?n(o):n,!Object.is(t,o))for(const t of s.effects)t()},s},a=t=>{const c=new Map,a=(t,e,n,o)=>s(c,t,e).set(n,o),r=()=>queueMicrotask((()=>{const s=o;o=r;const i=t(a);o=s;const[h,f,l,u]=n(c);e(f)&&f(h,l,u),e(i)&&i()}));r.targets=c,r()},r=t=>e(t)?r(t()):t,i=t=>"string"==typeof t,h=t=>parseInt(t,10),f=t=>parseFloat(t),l=t=>t;class u extends Event{constructor(e,s,n=!1){super(t,{bubbles:!0,cancelable:!0,composed:!0}),this.context=e,this.callback=s,this.subscribe=n}}export default class d extends HTMLElement{static define(t,e=customElements){try{e.get(t)||e.define(t,this)}catch(t){console.error(t)}}attributeMap={};contextMap={};#t=new Map;#e=new Map;#s=new Map;attributeChangedCallback(t,s,n){if(n!==s){const o=this.attributeMap[t],[c,a]=Array.isArray(o)?o:[t,o];this.set(c,e(a)?a(n,this,s):n)}}connectedCallback(){const n=Object.getPrototypeOf(this),o=n.providedContexts||[],c=this.#e;o.length&&(this.addEventListener(t,(t=>{const{target:n,context:a,callback:r,subscribe:i}=t;if(!o.includes(a)||!e(r))return;t.stopPropagation();const h=this.#t.get(a);if(i){const t=s(c,a);!t.has(n)&&t.set(n,r),r(h,(()=>t.delete(n)))}else r(h)})),o.forEach((t=>{a((()=>{const e=c.get(t),s=this.#t.get(t);for(const[t,n]of e)n(s,(()=>e.delete(t)))}))}))),setTimeout((()=>{n.consumedContexts?.forEach((t=>{const s=new u(t,((s,n)=>{this.#s.set(t,n);const o=this.contextMap[t],[c,a]=Array.isArray(o)?o:[t,o];this.#t.set(c||t,e(a)?a(s):s)}),!0);this.dispatchEvent(s)}))}))}has(t){return this.#t.has(t)}get(t){return r(this.#t.get(t))}set(t,s,n=!0){if(this.#t.has(t)){const o=this.#t.get(t);n&&e(o.set)&&o.set(s)}else{const n=e(s)&&e(s.set)?s:c(s);this.#t.set(t,n)}}delete(t){return this.#t.delete(t)}async pass(t,s,n=customElements){await n.whenDefined(t.localName);for(const[n,o]of Object.entries(s))t.set(n,c(e(o)?o:this.#t.get(o)))}targets(t){const e=new Set;for(const s of this.#t.get(t).effects)for(const t of s.targets.keys())e.add(t);return e}}export{a as effect,r as unwrap,i as asBoolean,h as asInteger,f as asNumber,l as asString,u as ContextRequestEvent};