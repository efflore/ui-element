const t=t=>e=>typeof e===t,e=t("object"),s=t("function"),r=t=>null==t,n=t=>null!=t,o=t=>n(t)&&(e(t)||s(t)),a=(t,e)=>s(t[e]),c=t=>t.nodeType!==Node.COMMENT_NODE,i=t=>r(t)?[]:[t],l="warn",u="error",h=(t,e,s="debug")=>([u,l].includes(s)&&console[s](e,t),t),{enqueue:g,cleanup:d}=(()=>{const t=new Map,e=new Map;let s;const r=(t,e)=>{try{t()}catch(t){h(t,e,u)}},n=()=>{s=null;for(const[e,s]of t)for(const[t,n]of s)r(n(e),` Effect ${t} on ${e?.localName||"unknown"} failed`);t.clear();for(const t of e.values())r(t,"Cleanup failed");e.clear()},o=t=>(e,r)=>{const o=!t.has(e);t.set(e,r),o&&(s&&cancelAnimationFrame(s),s=requestAnimationFrame(n))};return queueMicrotask(n),{enqueue:(e,s,r)=>{return o((n=e,t.has(n)||t.set(n,new Map),t.get(n)))(s,r);var n},cleanup:o(e)}})();let f;const p=t=>o(t)&&a(t,"set"),m=t=>p(t)||(t=>o(t)&&a(t,"run")&&"effects"in t)(t),b=t=>{const e=new Set,r=()=>((t=>{f&&t.add(f)})(e),t);return r.set=r=>{const n=t;t=s(r)?r(t):r,Object.is(t,n)||(t=>{for(const e of t)e();t.clear()})(e)},r},y=t=>{const e=()=>((t,e)=>{const s=f;f=e;try{t()}catch(t){h(t,"Error during reactive computation:",u)}finally{f=s}})((()=>{const e=t(g);s(e)&&d(t,e)}),e);e()},v="context-request";class E extends Event{context;callback;subscribe;constructor(t,e,s=!1){super(v,{bubbles:!0,composed:!0}),this.context=t,this.callback=e,this.subscribe=s}}const x=t=>async e=>{await e.host.constructor.registry.whenDefined(e.target.localName);for(const[r,n]of Object.entries(t))e.target.set(r,m(n)?n:s(n)?b(n):e.host.signal(n));return e},w=(t,e)=>s=>(s.target.addEventListener(t,e),s),C=(t,e)=>s=>(s.target.removeEventListener(t,e),s),N=(t,e=t)=>s=>(y((()=>{s.target.dispatchEvent(new CustomEvent(t,{detail:s.host.get(e),bubbles:!0}))})),s),A=t=>[n(t[0])],M=t=>t.map((t=>parseInt(t,10))).filter(Number.isFinite),S=t=>t.map(parseFloat).filter(Number.isFinite),k=t=>t,q=t=>{let e=[];try{e=t.map((t=>JSON.parse(t)))}catch(t){h(t,"Failed to parse JSON",u)}return e},L=(t,e,n,o,a,c)=>(t.host.set(e,s(e)?e:o,!1),y((s=>{if(t.host.has(e)){const o=t.host.get(e);s(t.target,n,r(o)?a:c(o))}})),t),$=t=>e=>{const s=e.target.textContent||"",r=t=>e=>()=>{Array.from(e.childNodes).filter(c).forEach((t=>t.remove())),e.append(document.createTextNode(t))};return L(e,t,"t",s,r(s),r)},F=(t,e=t)=>s=>{const r=e=>s=>()=>s[t]=e;return L(s,e,`p-${String(t)}`,s.target[t],r(null),r)},O=(t,e=t)=>s=>L(s,e,`a-${t}`,s.target.getAttribute(t),(e=>()=>e.removeAttribute(t)),(e=>s=>()=>s.setAttribute(t,e))),T=(t,e=t)=>s=>{const r=e=>s=>()=>s.toggleAttribute(t,e);return L(s,e,`a-${t}`,s.target.hasAttribute(t),r(!1),r)},j=(t,e=t)=>s=>L(s,e,`c-${t}`,s.target.classList.contains(t),(e=>()=>e.classList.remove(t)),(e=>s=>()=>s.classList.toggle(t,e))),D=(t,e=t)=>s=>L(s,e,`s-${t}`,s.target.style[t],(e=>()=>e.style.removeProperty(t)),(e=>s=>()=>s.style[t]=e)),J=t=>s(t)?J(t()):t;class P extends HTMLElement{static registry=customElements;static attributeMap={};static consumedContexts;static providedContexts;static define(t){try{this.registry.get(t)||this.registry.define(t,this)}catch(e){h(t,e.message,u)}}#t=new Map;self=[{host:this,target:this}];root=this.shadowRoot||this;attributeChangedCallback(t,e,r){if(r===e)return;const n=this.constructor.attributeMap[t];this.set(t,s(n)?n(i(r),this,e)[0]:r)}connectedCallback(){(t=>{const e=t.constructor,r=e.consumedContexts||[];for(const e of r)t.set(String(e),void 0,!1);setTimeout((()=>{for(const e of r)t.dispatchEvent(new E(e,(s=>t.set(String(e),s))))}));const n=e.providedContexts||[];n.length&&t.addEventListener(v,(e=>{const{context:r,callback:o}=e;n.includes(r)&&s(o)&&(e.stopPropagation(),o(t.get(String(r))))}))})(this)}disconnectedCallback(){}has(t){return this.#t.has(t)}get(t){return J(this.#t.get(t))}set(t,e,s=!0){if(this.#t.has(t)){if(s){const s=this.#t.get(t);p(s)&&s.set(e)}}else this.#t.set(t,m(e)?e:b(e))}delete(t){return this.#t.delete(t)}signal(t){return this.#t.get(t)}first(t){return i(this.root.querySelector(t)).map((t=>({host:this,target:t})))}all(t){return Array.from(this.root.querySelectorAll(t)).map((t=>({host:this,target:t})))}}export{P as UIElement,A as asBoolean,M as asInteger,q as asJSON,S as asNumber,k as asString,y as effect,N as emit,h as log,i as maybe,C as off,w as on,x as pass,O as setAttribute,F as setProperty,D as setStyle,$ as setText,T as toggleAttribute,j as toggleClass};
