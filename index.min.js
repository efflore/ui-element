let t;const e=(t,...s)=>{const n=s.shift();!t.has(n)&&t.set(n,new Map);const o=t.get(n);return s.length?e(o,...s):o},s=t=>"function"==typeof t,n=t=>s(t)&&s(t.set),o=e=>{const o=()=>(t&&o.effects.add(t),e);return o.effects=new Set,o.set=t=>{const c=e;if(e=s(t)&&!n(t)?t(c):t,!Object.is(e,c))for(const t of o.effects)t()},o},c=n=>{const[o,c,a]=(()=>{const t=new Map;return[t,(s,n,o,c)=>{e(t,s,n).set(o,c)},()=>{for(const[e,s]of t)for(const[t,n]of s)for(const[s,o]of n)t(e,s,o)}]})(),r=()=>{const e=t;t=r;const o=n(c);t=e,queueMicrotask((()=>{a(),s(o)&&o()}))};r.targets=o,r()},a="context-request",r=t=>s(t)?r(t()):t,i=t=>"string"==typeof t,f=t=>parseInt(t,10),h=t=>parseFloat(t),l=t=>t;class u extends Event{context;callback;subscribe;constructor(t,e,s=!1){super(a,{bubbles:!0,cancelable:!0,composed:!0}),this.context=t,this.callback=e,this.subscribe=s}}class d extends HTMLElement{static define(t,e=customElements){try{e.get(t)||e.define(t,this)}catch(t){console.error(t)}}attributeMap={};contextMap={};#t=new Map;attributeChangedCallback(t,e,n){if(n!==e){const o=this.attributeMap[t],[c,a]=Array.isArray(o)?o:[t,o];this.set(c,s(a)?a(n,this,e):n)}}connectedCallback(){const t=Object.getPrototypeOf(this),e=t.providedContexts||[];e.length&&this.addEventListener(a,(t=>{const{context:n,callback:o}=t;e.includes(n)&&s(o)&&(t.stopPropagation(),o(this.#t.get(n)))})),setTimeout((()=>{t.consumedContexts?.forEach((t=>{const e=new u(t,(e=>{const n=this.contextMap[t],[o,c]=Array.isArray(n)?n:[t,n];this.#t.set(o||t,s(c)?c(e,this):e)}));this.dispatchEvent(e)}))}))}has(t){return this.#t.has(t)}get(t){return r(this.#t.get(t))}set(t,e,s=!0){if(this.#t.has(t)){const o=this.#t.get(t);s&&n(o)&&o.set(e)}else{const s=n(e)?e:o(e);this.#t.set(t,s)}}delete(t){return this.#t.delete(t)}async pass(t,e,n=customElements){await n.whenDefined(t.localName);for(const[n,c]of Object.entries(e))t.set(n,o(s(c)?c:this.#t.get(c)))}targets(t){const e=new Set;for(const s of this.#t.get(t).effects)for(const t of s.targets.keys())e.add(t);return e}}export{u as ContextRequestEvent,i as asBoolean,f as asInteger,h as asNumber,l as asString,d as default,c as effect,r as unwrap};