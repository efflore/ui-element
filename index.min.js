const t=t=>e=>typeof e===t,e=t("object"),s=t("function"),r=t=>null==t,n=t=>null!=t,o=t=>n(t)&&(e(t)||s(t)),a=(t,e)=>s(t[e]),c=t=>t.nodeType!==Node.COMMENT_NODE,i=t=>r(t)?[]:[t],l=t=>t.shadowRoot||t,u=(t,e)=>({host:t,target:e}),h="error",f=(t,e,s="debug")=>((t=>"warn"===t||t===h)(s)&&console[s](e,t),t);let g;const{enqueue:d,cleanup:p}=(()=>{const t=new Map,e=new Map;let s;const r=()=>{s&&cancelAnimationFrame(s),s=requestAnimationFrame(o)},n=(t,e)=>{try{t()}catch(t){f(t,e,h)}},o=()=>{s=null;for(const[e,s]of t)for(const[t,r]of s)n(r(e),` Effect ${t} on ${e?.localName||"unknown"} failed`);t.clear();for(const t of e.values())n(t,"Cleanup failed");e.clear()};return queueMicrotask(o),{enqueue:(e,s,n)=>{t.has(e)||t.set(e,new Map);const o=t.get(e);o.has(s)||o.set(s,n),r()},cleanup:(t,s)=>{e.has(t)||e.set(t,s),r()}}})(),m=t=>o(t)&&a(t,"set"),b=t=>m(t)||(t=>o(t)&&a(t,"run")&&"effects"in t)(t),y=t=>{const e=()=>(g&&e.effects.add(g),t);return e.effects=new Set,e.set=r=>{const n=t;t=s(r)&&!b(r)?r(t):r,Object.is(t,n)||(t=>{for(const e of t)e.run()})(e.effects)},e},x=t=>{const e=new Set,r=()=>{const n=g;g=r;const o=t(((t,s,r)=>{d(t,s,r),e.has(t)||e.add(t)}));s(o)&&p(r,o),g=n};r.run=()=>r(),r.targets=e,r()},v="context-request";class w extends Event{context;callback;subscribe;constructor(t,e,s=!1){super(v,{bubbles:!0,composed:!0}),this.context=t,this.callback=e,this.subscribe=s}}const C=t=>async({host:e,target:r})=>{await e.constructor.registry.whenDefined(r.localName);for(const[n,o]of Object.entries(t))r.set(n,b(o)?o:s(o)?y(o):e.signal(o));return{host:e,target:r}},N=(t,e,s)=>({host:r,target:n})=>(n.addEventListener(t,(t=>r.set(e,(e=>s(t,e)??e)))),{host:r,target:n}),S=t=>[n(t[0])],A=t=>t.map((t=>parseInt(t,10))).filter(Number.isFinite),E=t=>t.map(parseFloat).filter(Number.isFinite),M=t=>t,k=t=>{let e=[];try{e=t.map((t=>JSON.parse(t)))}catch(t){f(t,"Failed to parse JSON",h)}return e},$=(t,e,s,n,o,a,c)=>{const i=a;return t.set(e,o,!1),x((o=>{if(t.has(e)){const a=t.get(e);r(a)?o(s,n,i):o(s,n,(t=>c(t))(a))}})),{host:t,target:s}},q=t=>({host:e,target:s})=>{const r=s.textContent||"",n=t=>e=>()=>{Array.from(e.childNodes).filter(c).forEach((t=>t.remove())),e.append(document.createTextNode(t))};return $(e,t,s,`t-${String(t)}`,r,n(r),n)},F=(t,e=t)=>({host:s,target:r})=>{const n=e=>s=>()=>s[t]=e;return $(s,e,r,`p-${String(t)}`,r[t],n(null),n)},L=(t,e=t)=>({host:s,target:r})=>$(s,e,r,`a-${t}`,r.getAttribute(t),(e=>()=>e.removeAttribute(t)),(e=>s=>()=>s.setAttribute(t,e))),O=(t,e=t)=>({host:s,target:r})=>{const n=e=>s=>()=>s.toggleAttribute(t,e);return $(s,e,r,`a-${t}`,r.hasAttribute(t),n(!1),n)},T=(t,e=t)=>({host:s,target:r})=>$(s,e,r,`c-${t}`,r.classList.contains(t),(e=>()=>e.classList.remove(t)),(e=>s=>()=>s.classList.toggle(t,e))),j=(t,e=t)=>({host:s,target:r})=>$(s,e,r,`s-${t}`,r.style[t],(e=>()=>e.style.removeProperty(t)),(e=>s=>()=>s.style[t]=e)),D=t=>s(t)?D(t()):t;class J extends HTMLElement{static registry=customElements;static attributeMap={};static consumedContexts;static providedContexts;static define(t){try{this.registry.get(t)||this.registry.define(t,this)}catch(e){f(t,e.message,h)}}#t=new Map;self=u(this,this);attributeChangedCallback(t,e,r){if(r===e)return;const n=this.constructor.attributeMap[t];this.set(t,s(n)?n(i(r),this,e)[0]:r)}connectedCallback(){const t=this.constructor,e=t.consumedContexts||[];for(const t of e)this.set(String(t),void 0);setTimeout((()=>{for(const t of e)this.dispatchEvent(new w(t,(e=>this.set(String(t),e))))}));const r=t.providedContexts||[];r.length&&this.addEventListener(v,(t=>{const{context:e,callback:n}=t;r.includes(e)&&s(n)&&(t.stopPropagation(),n(this.#t.get(String(e))))}))}disconnectedCallback(){}has(t){return this.#t.has(t)}get(t){return D(this.#t.get(t))}set(t,e,s=!0){if(this.#t.has(t)){if(s){const s=this.#t.get(t);m(s)&&s.set(e)}}else this.#t.set(t,b(e)?e:y(e))}delete(t){return this.#t.delete(t)}signal(t){return this.#t.get(t)}first=(t=>e=>i(l(t).querySelector(e)).map((e=>u(t,e))))(this);all=(t=>e=>Array.from(l(t).querySelectorAll(e)).map((e=>u(t,e))))(this)}export{J as UIElement,S as asBoolean,A as asInteger,k as asJSON,E as asNumber,M as asString,x as effect,f as log,i as maybe,N as on,C as pass,L as setAttribute,F as setProperty,j as setStyle,q as setText,O as toggleAttribute,T as toggleClass};
