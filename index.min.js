let t;const e=t=>"function"==typeof t,s=t=>e(t)&&e(t.set),n=(t,...e)=>{const s=e.shift();!t.has(s)&&t.set(s,new Map);const o=t.get(s);return e.length?n(o,...e):o},o=n=>{const o=()=>(t&&o.effects.add(t),n);return o.effects=new Set,o.set=t=>{const c=n;if(n=e(t)&&!s(t)?t(c):t,!Object.is(n,c))for(const t of o.effects)t()},o},c=s=>{const[o,c,a]=(()=>{const t=new Map;return[t,(e,s,o,c)=>{n(t,e,s).set(o,c)},()=>{for(const[e,s]of t)for(const[t,n]of s)for(const[s,o]of n)t(e,s,o)}]})(),r=()=>{const n=t;t=r;const o=s(c);t=n,queueMicrotask((()=>{a(),e(o)&&o()}))};r.targets=o,r()},a="context-request",r=t=>e(t)?r(t()):t,i=t=>"string"==typeof t,h=t=>parseInt(t,10),f=t=>parseFloat(t),l=t=>t;class u extends Event{context;callback;subscribe;constructor(t,e,s=!1){super(a,{bubbles:!0,cancelable:!0,composed:!0}),this.context=t,this.callback=e,this.subscribe=s}}class d extends HTMLElement{static define(t,e=customElements){try{e.get(t)||e.define(t,this)}catch(t){console.error(t)}}attributeMap={};contextMap={};#t=new Map;#e=new Map;#s=new Map;attributeChangedCallback(t,s,n){if(n!==s){const o=this.attributeMap[t],[c,a]=Array.isArray(o)?o:[t,o];this.set(c,e(a)?a(n,this,s):n)}}connectedCallback(){const t=Object.getPrototypeOf(this),s=t.providedContexts||[],o=this.#e;s.length&&(this.addEventListener(a,(t=>{const{target:c,context:a,callback:r,subscribe:i}=t;if(!s.includes(a)||!e(r))return;t.stopPropagation();const h=this.#t.get(a);if(i){const t=n(o,a);!t.has(c)&&t.set(c,r),r(h,(()=>t.delete(c)))}else r(h)})),s.forEach((t=>{c((()=>{const e=o.get(t),s=this.#t.get(t);for(const[t,n]of e)n(s,(()=>e.delete(t)))}))}))),setTimeout((()=>{t.consumedContexts?.forEach((t=>{const s=new u(t,((s,n)=>{this.#s.set(t,n);const o=this.contextMap[t],[c,a]=Array.isArray(o)?o:[t,o];this.#t.set(c||t,e(a)?a(s,this):s)}),!0);this.dispatchEvent(s)}))}))}has(t){return this.#t.has(t)}get(t){return r(this.#t.get(t))}set(t,e,n=!0){if(this.#t.has(t)){const o=this.#t.get(t);n&&s(o)&&o.set(e)}else{const n=s(e)?e:o(e);this.#t.set(t,n)}}delete(t){return this.#t.delete(t)}async pass(t,s,n=customElements){await n.whenDefined(t.localName);for(const[n,c]of Object.entries(s))t.set(n,o(e(c)?c:this.#t.get(c)))}targets(t){const e=new Set;for(const s of this.#t.get(t).effects)for(const t of s.targets.keys())e.add(t);return e}}export{u as ContextRequestEvent,i as asBoolean,h as asInteger,f as asNumber,l as asString,d as default,c as effect,r as unwrap};