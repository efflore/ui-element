const t=t=>e=>typeof e===t,e=t("object"),s=t("function"),n="nothing",c=t=>s(t)?c(t()):t,o=(t,e)=>t&&s(t[e]),r=t=>(t=>(t=>null!=t)(t)&&(e(t)||s(t)))(t)&&o(t,"map"),a=t=>(t=>(t=>null==t)(t)||s(t)&&"type"in t&&t.type===n)(t)?u():i(t),i=t=>{const e=()=>t;return e.type=typeof t,e.or=e=>t,e.map=e=>a(e(t)),e.chain=e=>e(t),e.filter=e=>e(t)?i(t):u(),e},u=()=>new Proxy((()=>{}),{get:(t,e)=>{switch(e){case"type":return n;case"toString":return()=>"";case"or":return t=>t;case"chain":return t=>t();default:return()=>u()}}});let l;const h=t=>s(t)&&o(t,"set"),f=t=>h(t)||(t=>s(t)&&o(t,"run")&&"effects"in t)(t),d=t=>{const e=()=>(l&&e.effects.add(l),t);return e.effects=new Set,e.set=n=>{const o=t;t=s(n)&&!f(n)?r(t)?t.map(n):n(t):n,!Object.is(c(t),c(o))&&(t=>{for(const e of t)e.run()})(e.effects)},e},p=t=>{const e=new Map,n=()=>{const c=l;l=n;const o=t(((t,s)=>{!e.has(t)&&e.set(t,new Set),e.get(t)?.add(s)}));for(const t of e.values()){for(const e of t)e();t.clear()}l=c,s(o)&&queueMicrotask(o)};n.run=()=>n(),n.targets=e,n()},g="context-request";class b extends Event{context;callback;subscribe;constructor(t,e,s=!1){super(g,{bubbles:!0,composed:!0}),this.context=t,this.callback=e,this.subscribe=s}}class m extends HTMLElement{static consumedContexts;static providedContexts;static define(t,e=customElements){try{e.get(t)||e.define(t,this)}catch(t){console.error(t)}}attributeMap={};#t=new Map;attributeChangedCallback(t,e,n){if(n===e)return;const c=this.attributeMap[t],o=a(n);this.set(t,s(c)?o.map((t=>c(t,this,e))):o)}connectedCallback(){const t=this.constructor,e=t.consumedContexts||[];for(const t of e)this.set(String(t),void 0);setTimeout((()=>{for(const t of e)this.dispatchEvent(new b(t,(e=>this.set(String(t),e))))}));const n=t.providedContexts||[];n.length&&this.addEventListener(g,(t=>{const{context:e,callback:c}=t;n.includes(e)&&s(c)&&(t.stopPropagation(),c(this.#t.get(String(e))))}))}has(t){return this.#t.has(t)}get(t){return c(this.#t.get(t))}set(t,e,s=!0){if(this.#t.has(t)){if(s){const s=this.#t.get(t);h(s)&&s.set(e)}}else this.#t.set(t,f(e)?e:d(e))}delete(t){return this.#t.delete(t)}async pass(t,e,n=customElements){if(await n.whenDefined(t.localName),!o(t,"set"))throw new TypeError("Expected UIElement");for(const[n,c]of Object.entries(e))t.set(n,f(c)?c:s(c)?d(c):this.#t.get(c))}signal(t){return this.#t.get(t)}}export{m as default,p as effect};