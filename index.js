const t=t=>e=>typeof e===t,e=t("symbol"),s=t("object"),n=t("function"),o=Symbol(),c=t=>n(t)?c(t()):t,r=(t,e)=>t&&n(t[e]),i=t=>(t=>(t=>null!=t)(t)&&(s(t)||n(t)))(t)&&r(t,"map"),a=t=>(t=>null==t)(t)||((t,s=[])=>n(t)&&"type"in t&&(!s.length||e(t.type)&&s.includes(t.type)))(t,[o]),l=t=>a(t)?u():h(t),h=t=>{const e=()=>t;return e.toString=()=>String(t),e.map=e=>l(e(t)),e.or=()=>h(t),e},u=()=>new Proxy((()=>{}),{get:(t,e)=>"type"===e?o:"toString"===e?()=>"":"or"===e?t=>l(t()):()=>u()});let d;const f=t=>n(t)&&r(t,"set"),g=t=>f(t)||(t=>n(t)&&r(t,"run")&&"effects"in t)(t),p=t=>{const e=()=>(d&&e.effects.add(d),t);return e.effects=new Set,e.set=s=>{const o=t;t=n(s)&&!g(s)?i(t)?t.map(s):s(t):s,Object.is(c(t),c(o))||(t=>{for(const e of t)e.run()})(e.effects)},e},b=t=>{const e=new Map,s=()=>{const o=d;d=s;const c=t(((t,s)=>{e.has(t)||e.set(t,new Set),e.get(t)?.add(s)}));for(const t of e.values()){for(const e of t)e();t.clear()}d=o,n(c)&&queueMicrotask(c)};s.run=()=>s(),s.targets=e,s()},y="context-request";class m extends Event{context;callback;subscribe;constructor(t,e,s=!1){super(y,{bubbles:!0,composed:!0}),this.context=t,this.callback=e,this.subscribe=s}}class x extends HTMLElement{static registry=customElements;static attributeMap={};static consumedContexts;static providedContexts;static define(t){try{this.registry.get(t)||this.registry.define(t,this)}catch(t){console.error(t)}}#t=new Map;attributeChangedCallback(t,e,s){if(s===e)return;const o=this.constructor.attributeMap[t],c=l(s);this.set(t,n(o)?o(c,this,e):c)}connectedCallback(){const t=this.constructor,e=t.consumedContexts||[];for(const t of e)this.set(String(t),void 0);setTimeout((()=>{for(const t of e)this.dispatchEvent(new m(t,(e=>this.set(String(t),e))))}));const s=t.providedContexts||[];s.length&&this.addEventListener(y,(t=>{const{context:e,callback:o}=t;s.includes(e)&&n(o)&&(t.stopPropagation(),o(this.#t.get(String(e))))}))}disconnectedCallback(){}has(t){return this.#t.has(t)}get(t){return c(this.#t.get(t))}set(t,e,s=!0){if(this.#t.has(t)){if(s){const s=this.#t.get(t);f(s)&&s.set(e)}}else this.#t.set(t,g(e)?e:p(e))}delete(t){return this.#t.delete(t)}async pass(t,e){if(await this.constructor.registry.whenDefined(t.localName),!r(t,"set"))throw new TypeError("Expected UIElement");for(const[s,o]of Object.entries(e))t.set(s,g(o)?o:n(o)?p(o):this.#t.get(o))}signal(t){return this.#t.get(t)}}export{x as UIElement,b as effect};
