let t;const e=t=>"function"==typeof t,s=t=>e(t)&&e(t.set),o=o=>{const n=()=>(t&&n.effects.add(t),o);return n.effects=new Set,n.set=t=>{const c=o;if(o=e(t)&&!s(t)?t(c):t,!Object.is(o,c))for(const t of n.effects)t()},n},n=e=>{const s=()=>{const o=t;t=s;const n=e();return t=o,n};return s},c=s=>{const o=new Map,n=()=>{const c=t;t=n;const f=s(((t,e)=>{!o.has(t)&&o.set(t,new Set),o.get(t).add(e)}));t=c,(o.size||f)&&queueMicrotask((()=>{for(const t of o.values())for(const e of t)e();e(f)&&f()}))};n.targets=o,n()};export{o as cause,n as derive,c as effect,e as isFunction,s as isState};