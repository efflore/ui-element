const t=t=>"function"==typeof t;let e;const s=s=>{const o=()=>(e&&o.effects.add(e),s);return o.effects=new Set,o.set=e=>{const c=s;if(s=t(e)&&!(e=>t(e)&&t(e.set))(e)?e(c):e,!Object.is(s,c))for(const t of o.effects)t()},o},o=t=>t,c=s=>{const o=new Map,c=()=>{const n=e;e=c;const f=s(((t,e)=>{!o.has(t)&&o.set(t,new Set),o.get(t).add(e)}));e=n,queueMicrotask((()=>{for(const t of o.values())for(const e of t)e();t(f)&&f()}))};c.targets=o,c()};export{s as cause,o as derive,c as effect};